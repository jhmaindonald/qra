library(qra)
rhub::platforms()
rhub::platforms()[9,]
?rhub::check
rhub::check(show_status=F)
form <- cbind(dead,total-dead)~0+Cultivar/dose+(1|cultRep)
codling1989.TMB <- glmmTMB::glmmTMB(formula=form,
family=glmmTMB::betabinomial(link='cloglog'),
dispformula=~0+Cultivar/splines::ns(dose,2),
data=subset(codling1989,dose>0))
library(qra)
form <- cbind(dead,total-dead)~0+Cultivar/dose+(1|cultRep)
codling1989.TMB <- glmmTMB::glmmTMB(formula=form,
family=glmmTMB::betabinomial(link='cloglog'),
dispformula=~0+Cultivar/splines::ns(dose,2),
data=subset(codling1989,dose>0))
form <- cbind(dead,total-dead)~0+Cultivar/dose+(1|cultRep)
codling1989[1:4,]
table(codling1989$dose)
codling1989.TMB <- glmmTMB::glmmTMB(formula=form,
family=glmmTMB::betabinomial(link='cloglog'),
dispformula=~0+Cultivar/splines::ns(dose,2),
data=subset(codling1989,dose>8))
codling1989.TMB <- glmmTMB::glmmTMB(formula=form,
family=glmmTMB::betabinomial(link='cloglog'),
data=subset(codling1989,dose>8))
codling1989.TMB <- glmmTMB::glmmTMB(formula=form,
family=glmmTMB::betabinomial(link='cloglog'),
data=subset(codling1989,dose>0))
codling1989.TMB <- glmmTMB::glmmTMB(formula=form,
family=glmmTMB::betabinomial(link='cloglog'),
dispformula=~0+Cultivar/poly(dose,2),
data=subset(codling1989,dose>8))
knitr::opts_chunk$set(echo = FALSE, comment=NA, width=70)
options(show.signif.stars=FALSE)
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages({library(lme4); library(splines)})
form <- cbind(dead,total-dead)~0+Cultivar/dose+(1|cultRep)
codling1989.TMB <- glmmTMB::glmmTMB(formula=form,
family=glmmTMB::betabinomial(link='cloglog'),
data=subset(codling1989,dose>8))
HCbb2s.cll <- update(HCbb.cll, formula=form2s)
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages({library(lme4); library(splines)})
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
form2s <- cbind(Dead,Live)~0+trtGp/TrtTime+ns(scTime,2)+(1|trtGpRep)
HCbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawCon)
HCbb2s.cll <- update(HCbb.cll, formula=form2s)
HCbb.logit <- glmmTMB::glmmTMB(form, dispformula=~trtGp+ns(TrtTime,2),
family=glmmTMB::betabinomial(link="logit"),
data=HawCon)
HCbb2s.logit <- update(HCbb.logit, formula=form2s)
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HCbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawCon)
LTbb.cll <- qra::extractLT(p=0.99, obj=HCbb.cll, link="cloglog",
a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
form
table(HawCon$trtGp)
HawCon[1:2,]
HawMed <- droplevels(subset(HawCon, CN=="MedFly"))
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HCbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
qra::extractLT(p=0.99, obj=HCbb.cll, link="cloglog",
a=1:4, b=5:8, eps=0, df.t=NULL)[,-2]
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
qra::extractLT(p=0.99, obj=HawMedbb.cll, link="cloglog",
a=1:4, b=5:8, eps=0, df.t=NULL)[,-2]
devtools::document()
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
> HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+ns(scTime,2),
+                              family=glmmTMB::betabinomial(link="cloglog"),
+                              data=HawMed)
> qra::extractLT(p=0.99, obj=HawMedbb.cll, link="cloglog",
+                                                        a=1:4, b=5:8, eps=0, df.t=NULL)[,-2]
devtools::document()
HawMed[1:4,]
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HawMed <- droplevels(subset(HawCon, CN=="MedFly"))
HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
splines::ns
names(HawMed)
qra::HawCon[1:3,]
devtools::document()
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HawMed <- droplevels(subset(HawCon, CN=="MedFly"))
HawMed <- within(HawMed,
{trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
scTime <- scale(TrtTime) })
HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
round(qra::extractLT(p=0.99, obj=HawMedbb.cll, link="cloglog",
a=1:4, b=5:8, eps=0, df.t=NULL)[,-2], 2)
stats::scale
HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+splines::ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
devtools::document()
rhub::check()
?rhub
remotes::install_github("r-hub/rhub")
rhub::check()
validate_email()
rhub::validate_email()
whoami()
rhub::whoami()
devtools::whoami()
library(rhub)
install.packages("rhub")
library(rhub)
validate_email()
use_devtools()
library(usethis)
use_devtools()
library(rhub)
validate_email()
library(rhub)
validate_email()
usethis::github_token_help()
usethis::gh_token_help()
gh::gh_whoami()
usethis::gh_token_help()
validate_email()
?validate_email
?check
platforms()
?platforms
library(rhub)
validate_email()
validate_email('john@statsresearch.co.nz')
if(T)T & F
if(T)T & T
install.packages("stylo")
stylo::check,encoding('~/_pkgs/qra/R/')
stylo::check,encoding('~/pkgs/qra/R/')
stylo::check.encoding('~/pkgs/qra/R/')
?iconv
iconvlist()
library(rhub)
validate_email()
?iconv
?tools::showNonASCII
showNonASCII('~/pkgs/qra/R/extractLT/R')
tools::showNonASCII('~/pkgs/qra/R/extractLT/R')
tools::showNonASCII('~/pkgs/qra/R/extractLT/R', file='~/Desktop/out.txt')
tools::showNonASCIIfile('~/pkgs/qra/R/extractLT/R', file='~/Desktop/out.txt')
z <- xfun::read_utf8('~/pkgs/qra/R/extractLT/R')
z <- xfun::read_utf8('~/pkgs/qra/R/extractLT.R')
z
z <- xfun::read_utf8('~/pkgs/qra/R/fieller.R')
z
z <- xfun::read_utf8('~/pkgs/qra/R/fieller.Rd')
z <- xfun::read_utf8('~/pkgs/qra/man/fieller.Rd')
z <- xfun::read_utf8('~/pkgs/qra/man/extractLT.Rd')
validate_email()
stylo::check.encoding('~/pkgs/qra/R/')
stylo::check.encoding('~/pkgs/qra/R/', output='~/Desktop/out.txt')
gh::whoami()
gh::gh_whoami()
gh::print.gh_response()
gh::printgh_response()
gh::gh_whoami()
validate_email()
usethis::edit_r_environ()
usethis::github_sitrep()
usethis::git_sitrep()
?git_vaccinate
git_vaccinate()
?gert
install.packages("gert")
library(rhub)
validate_email()
use_devtools()
upstream_url <- "git@github.com:jhmaindonald/qra.git"
upstream_url
git_remotes()
validate_email()
install.packages("rhub")
library(rhub)
validate_email()
validate_email
?validate_email
validate_email()
list_validated_emails()
validate_email('john@statsresearch.co.nz',token='a0b14114ce6e48cda5ba758d2fac8fe3')
validate_email()
library(rhub)
validate_email()
devtools::document()
remotes::install_github("r-hub/rhub")
?tools::showNonASCIIfile
z <- readLines('man/extractLT.Rd')
showNonASCII(paste(z,collapse=" "))
tools::showNonASCII(paste(z,collapse=" "))
z2 <- tools::showNonASCII(paste(z,collapse=" "))
?grep
grep('fc', z)
grep('c2', z)
grep('c2', z2)
grep('c2', z2, fixed=T)
grep('<c2>', z2, fixed=T)
MawCon[1,]
HawCon[1,]
pcheck <- suppressWarnings(requireNamespace("glmmTMB", quietly = TRUE))
if(pcheck) pcheck <- pcheck & packageVersion("glmmTMB") >= "1.1.2"
pcheck
packageVersion("glmmTMB")
-1/(exp(1)*c(0.05. 0.01, 0.005)*log(c(0.05. 0.01, 0.005)))
-1/(exp(1)*c(0.05, 0.01, 0.005)*log(c(0.05, 0.01, 0.005)))
-1/(exp(1)*c(0.05, 0.01, 0.005)*log(c(0.05, 0.01, 0.001)))
-1/(exp(1)*c(0.05, 0.01, 0.005, 0.001)*log(c(0.05, 0.01, 0.005, 0.001)))
round(-1/(exp(1)*c(0.05, 0.01, 0.005, 0.001)*log(c(0.05, 0.01, 0.005, 0.001))),2)
round(-1/(exp(1)*c(0.05, 0.01, 0.005, 0.001)*log(c(0.05, 0.01, 0.005, 0.001))),1)
install.packages("glmmTMB")
install.packages("TMB")
p <- seq(from=0.001, to =0.05, by=0.001)
plot(p, -1/(exp(1)*p*log(p)))
plot(p, -1/(exp(1)*p*log(p)), type='l')
plot(log(p), -1/(exp(1)*p*log(p)), type='l')
library(lattice)
?xyplot
xyplot(I(-1/(exp(1)*p*log(p)))~I(p), type='l',
scales=list(x=list(at=log(c(0.05, 0.01, 0.005, 0.001))), labels=paste(c(0.05, 0.01, 0.005, 0.001))))
xyplot(I(-1/(exp(1)*p*log(p)))~I(log(p), type='l',
scales=list(x=list(at=log(c(0.05, 0.01, 0.005, 0.001))), labels=paste(c(0.05, 0.01, 0.005, 0.001))))
)
xyplot(I(-1/(exp(1)*p*log(p)))~I(log(p)), type='l',
scales=list(x=list(at=log(c(0.05, 0.01, 0.005, 0.001))), labels=paste(c(0.05, 0.01, 0.005, 0.001))))
-1/(exp(1)*p*log(p))
df <- data.frame(p=p, BFupper=-1/(exp(1)*p*log(p)))
labp <- c(0.05, 0.01, 0.005, 0.001)
xyplot(BFupper~log(p), type='l', scales=list(x=list(at=log(p), labels=paste(p))))
xyplot(BFupper~log(p), type='l', scales=list(x=list(at=log(p), labels=paste(p))), data=df)
xyplot(BFupper~log(p), type='l', scales=list(x=list(at=log(labp0), labels=paste(labp))), data=df)
xyplot(BFupper~log(p), type='l', scales=list(x=list(at=log(labp), labels=paste(labp))), data=df)
z <- readLines('man/extractLT.Rd')
m<-gregexpr("[^\001-\177]", dat$message); regmatches(dat$message, m) –
m<-gregexpr("[^\001-\177]", z); regmatches(dat$message, m) –
m<-gregexpr("[^\001-\177]", dat$message); regmatches(dat$message, m)
m<-gregexpr("[^\001-\177]", z); regmatches(dat$message, m)
m<-gregexpr("[^\001-\177]", z); regmatches(z, m)
data(package='qra')
save(qra::HawCon, file='~/tmp/HawCon.rda',ascii=T)
HawCon <- qra::HawCon
save(qra::Con, file='~/tmp/HawCon.rda',ascii=T)
save(HawCon, file='~/tmp/HawCon.rda',ascii=T)
load('~/tmp/HawCon.rda')
save(HawCon, file='data/HawCon.rds')
library(qra)
detach('package:qra')
kerrich <- qra::kerrich
save(kerrich, file='~/tmp/kerrich.rda',ascii=T)
load('~/tmp/kerrich.rda')
saveRDS(kerrich, file='data/kerrich.rds')
saveRDS(HawCon, file='data/HawCon.rds')
ray_blight <- qra::ray_blight
save(ray_blight, file='~/tmp/ray_blight.rda',ascii=T)
load('~/tmp/ray_blight.rda')
saveRDS(ray_blight, file='data/ray_blight.rds')
codling1988 <- qra::codling1988
save(codling1988, file='~/tmp/codling1988.rda',ascii=T)
load('~/tmp/codling1988.rda')
saveRDS(codling1988, file='data/codling1988.rds')
codling1989 <- qra::codling1989
save(codling1989, file='~/tmp/codling1989.rda',ascii=T)
load('~/tmp/codling1989.rda')
saveRDS(codling1989, file='data/codling1989.rds')
malesINfirst12 <- qra::malesINfirst12
save(malesINfirst12, file='~/tmp/malesINfirst12.rda',ascii=T)
load('~/tmp/malesINfirst12.rda')
saveRDS(malesINfirst12, file='data/malesINfirst12.rds')
malesINfirst12 <- qra::malesINfirst12
save(malesINfirst12, file='~/tmp/malesINfirst12.rda',ascii=T)
load('~/tmp/malesINfirst12.rda')
saveRDS(malesINfirst12, file='data/malesINfirst12.rds')
library(qra)
data(package='qra')
library(qra)
sessionInfo()
library(rhub)
validate_email()
stylo::check.encoding('R/')
stylo::check.encoding('Rd/')
stylo::check.encoding('man/')
iconv('malesINfirst12.Rd', to='ASCII')
iconv('ray_blight.Rd', to='ASCII')
stylo::check.encoding('man/')
devtools::document()
stylo::check.encoding('man/')
stylo::check.encoding('R/')
?iconv
iconvlist()
iconvlist()[1:6]
?devtools::document
library(qra)
data("ray_blight")
ls()
stylo::check.encoding('man/')
iconv('rayBlight.Rd', to='ASCII')
stylo::check.encoding('man/')
?iconv
z <- iconv('rayBlight.Rd', to='ASCII')
z[1:3]
iconv('man/rayBlight.Rd', from="UTF-8", to='ASCII')
stylo::check.encoding('man/')
z <- "Pethybridge SJ, Esker P, Hay F, Wilson C, Nutter FW. 2005. Spatiotemporal description of epidemics caused by Phoma ligulicola in Tasmanian pyrethrum fields. Phytopathology 95, 648-658."
Encoding(z)
iconv(z, to='ASCII')
z <- iconv(z, to='ASCII')
z
Encoding(z)
library(stringi)
stri_enc_mark(z)
stylo::check.encoding('man/')
HawCon[1,]
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HawMed <- droplevels(subset(HawCon, CN=="MedFly"&LifestageTrt=="Egg"))
HawMed <- within(HawMed,
{trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
scTime <- scale(TrtTime) })
HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+splines::ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
round(qra::extractLT(p=0.99, obj=HawMedbb.cll, link="cloglog",
a=1:4, b=5:8, eps=0, df.t=NULL)[,-2], 2)
table(HawCon$trtGp)
table(HawMed$trtGp)
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HawMed <- droplevels(subset(HawCon, CN=="MedFly"&LifestageTrt!="Egg"))
HawMed <- within(HawMed,
{trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
scTime <- scale(TrtTime) })
HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+splines::ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
round(qra::extractLT(p=0.99, obj=HawMedbb.cll, link="cloglog",
a=1:4, b=5:8, eps=0, df.t=NULL)[,-2], 2)
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HawMed <- droplevels(subset(HawCon, CN=="MedFly"&LifestageTrt!="Egg"))
HawMed <- within(HawMed,
{trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
scTime <- scale(TrtTime) })
HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+splines::ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
round(qra::extractLT(p=0.99, obj=HawMedbb.cll, link="cloglog",
a=1:3, b=3:6, eps=0, df.t=NULL)[,-2], 2)
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HawMed <- droplevels(subset(HawCon, CN=="MedFly"&LifestageTrt!="Egg"))
HawMed <- within(HawMed,
{trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
scTime <- scale(TrtTime) })
HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+splines::ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
round(qra::extractLT(p=0.99, obj=HawMedbb.cll, link="cloglog",
a=1:3, b=4:6, eps=0, df.t=NULL)[,-2], 2)
devtools::document()
stylo::check.encoding('man/')
library(qra)
z <- readRDS('inst/extdata/rayBlight.rds')
z[1:3,]
z
qra::rayBlight[1:2,]
qra::ray_blight[1:2,]
qra::ray_blight
rayBlight <- qra::ray_blight
saveRDS(rayBlight, file='inst/extdata/rayBlight.rds')
library(qra)
load('~/tmp/ray_blight.rda')
rayBlight <- ray_blight
save(rayBlight, file='~/tmp/rayBlight.rda', ascii=T)
load('~/tmp/rayBlight.rda')
Encoding(rayBlight)
rayBlight
save(rayBlight, file='data/rayBlight.rda', ascii=T)
devtools::document()
library(qra)
platforms()
library(rhub)
platforms()
platforms()[9]
platforms()[[9]]
rhub(platform='solaris-x86-patched')
check_on_solaris()
sessionInfo()
install.packages("~/Desktop/qra_0.2.6.tar.gz", repos = NULL, type = "source")
qt(0.975, df=c(4,6,10,20))
z<- qt(0.975, df=c(4,6,10,20,40))
z
qt(0.975,df=100)
ttest.tstat(z[1], n1=4)
library(BayesFactor)
ttest.tstat(z[1], n1=4)
ttest.tstat(z[2], n1=6)
ttest.tstat(z[3], n1=10)
z<- qt(0.975, df=c(4,6,10,20,40))
ttest.tstat(z[4], n1=20)
ttest.tstat(z[3], n1=10)
ttest.tstat(z[5], n1=40)
diffScores = sleep$extra[1:10] - sleep$extra[11:20]
z
qt(0.9975,df=40)
ttest.tstat(2.97, n1=40)
ttest.tstat(z[5], n1=40)
ttest.tstat(17.3, n1=9)
library(BayesFactor)
?ttest.tstat
t.test(extra ~ group, data = sleep, paired=TRUE)
result <- ttest.tstat(t = -4.0621, n1 = 10)
result
exp(result[['bf']])
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep)
HawMed <- droplevels(subset(HawCon, CN=="MedFly"&LifestageTrt!="Egg"))
HawMed <- within(HawMed,
{trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
scTime <- scale(TrtTime) })
HawMedbb.cll <- glmmTMB::glmmTMB(form, dispformula=~trtGp+splines::ns(scTime,2),
family=glmmTMB::betabinomial(link="cloglog"),
data=HawMed)
rho <- getRho(HawMedbb.cll)
rho <- getRho(HawMedbb.cll)
rho <- qra::getRho(HawMedbb.cll)
names(rho)
args(getRho)
args(qra::getRho)
rho[1]
HawMedbb.cll
form <- cbind(dead,total-dead)~0+Cultivar/dose+(1|cultRep)
codling1989.TMB <- glmmTMB::glmmTMB(formula=form,
family=glmmTMB::betabinomial(link='cloglog'),
dispformula=~0+Cultivar/splines::ns(dose,2), data=qra::codling1989)
rho <- qra::getRho(codling1989.TMB)
rho
library(qra)
devtools::document()
library(qra)
devtools::document()
library(qra)
Sys.setenv(_R_CHECK_DEPENDS_ONLY_=true)
Sys.setenv('_R_CHECK_DEPENDS_ONLY_=true')
Sys.setenv(_R_CHECK_DEPENDS_ONLY_='true')
Sys.setenv('_R_CHECK_DEPENDS_ONLY_'='true')
Sys.getenv('_R_CHECK_DEPENDS_ONLY_')
Sys.setenv('_R_CHECK_DEPENDS_ONLY_'=TRUE)
Sys.getenv('_R_CHECK_DEPENDS_ONLY_')
Sys.getenv('_R_CHECK_CRAN_INCOMING_USE_ASPELL_')
Sys.setenv('_R_CHECK_DEPENDS_ONLY_'='true')
Sys.getenv('_R_CHECK_DEPENDS_ONLY_')
Sys.setenv('_R_CHECK_DEPENDS_ONLY_'=true)
Sys.setenv('_R_CHECK_DEPENDS_ONLY_'='true')
Sys.getenv('_R_CHECK_DEPENDS_ONLY_')
library(qra)
Sys.getenv()
Sys.setenv('_R_CHECK_DEPENDS_ONLY_'=TRUE)
qt(.975,10)
pt(qt(.975,10),.975)
dt(qt(.975,10),.975)
d <- seq(from =-4, to=4, by=.1)
sum(d * c(.1,diff(d)))
sum(dt(d,10) * c(.1,diff(d)))
d <- seq(from =-5, to=5, by=.1)
sum(dt(d,10) * c(.1,diff(d)))
mean(dt(d,10))
?integrate
integrate(function(x)dt(x,10), lower=-Inf, to=Inf)
integrate(function(x)dt(x,10), lower=-Inf, upper=Inf)
library(qra)
?requireNamespace
?VGAM::ruge
?gamlss::dBI
library(gamlss)
?gamlss.dist::dBI
if(suppressMessages(requireNamespace('gamlss.dist', quietly = TRUE))){
x <- 0:10
denBI <- dBI(x, mu=.5, bd=10)}
library(qra)
.libPaths()
library(qra)
install.packages("robustbase", lib="/Library/Frameworks/R.framework/Versions/4.1/Resources/library")
library(qra)
file.exists("~/.ssh/id_rsa.pub")
library(qra)
devtools::document()
gitcreds::gticreds_set()
gitcreds::gitcreds_set()
gitcreds.get()
gitcreds::gitcreds.get()
gitcreds::gitcreds_get()
gitcreds::gitcreds_list()
install.packages("robustlmm")
